//*******************************************************************************
//*
//*   Copyright (C) 2002-2006, International Business Machines
//*   Corporation and others.  All Rights Reserved.
//*
//*******************************************************************************

casing:table(nofallback) {
    Info {
        Description { "This is test data file for string casing." }

        LongDescription {
            "each item is an array with\n"
            "input string, result string, locale ID[, break iterator]\n"
            "the break iterator (only for titlecasing) is specified as an int, same as in UBreakIteratorType:\n"
            "0=UBRK_CHARACTER  1=UBRK_WORD  2=UBRK_LINE  3=UBRK_SENTENCE  4=UBRK_TITLE  -1=default\n"
        }
    }
    TestData {
      lowercasing {
        Headers { "Input", "Output", "Locale" }
        Cases {
            { " tHe QUIcK bRoWn", " the quick brown", "" },
            { "aBIΣßΣ/񟿿𐐅", "abiσßς/񟿿𐐭", "" },
            { "aBIΣßΣ/񟿿𐐅", "abıσßς/񟿿𐐭", "tur" } // tur: 3-letter code for Turkish
        }
      }
      uppercasing {
        Headers { "Input", "Output", "Locale" }
        Cases {
            { " tHe QUIcK bRoWn", " THE QUICK BROWN", "" },
            { "aBiσßς/ﬃ񟿿𐐭", "ABIΣSSΣ/FFI񟿿𐐅", "" },
            { "aBiσßς/ﬃ񟿿𐐭", "ABİΣSSΣ/FFI񟿿𐐅", "az" } // az same casing as tr
        }
      }
      titlecasing {
        Headers { "Input", "Output", "Locale", "Type" }
        Cases {
            { "ʻaMeLikA huI Pū ʻʻʻiA", "ʻAmelika Hui Pū ʻʻʻIa", "", "-1" }, // titlecase first _cased_ letter, j4933
            { " tHe QUIcK bRoWn", " The Quick Brown", "", "4" },
            { "ǄǅǆǇǈǉǊǋǌ", "ǅǅǅǈǈǈǋǋǋ", "", "0" }, // UBRK_CHARACTER
            { "ǉubav ljubav", "ǈubav Ljubav", "", "-1" }, // Lj vs. L+j
            { "'oH dOn'T tItLeCaSe AfTeR lEtTeR+'", "'Oh Don't Titlecase After Letter+'", "", "-1" }
        }
      }
    }
}
